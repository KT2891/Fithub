- if show_post.user.status == "active"
  .posts__content-wrap
    .container-fluid.col-12.mt-2.border-bottom
      .row
        = render "public/users/post_user_info", show_post: show_post
        %span.col-auto.offset-1.my-auto
          = time_ago_in_words(show_post.created_at)
      = link_to post_path(show_post), class: "posts__content-text"  do
        .row.mt-3
          %p.ml-5.text-dark
            = show_post.body
        - if show_post.images.present?
          .row
            - show_post.images.each do |img|
              = image_tag img.variant(resize_to_fill: [256, 256]), class: "col-5 m-1"
        - if show_post.training_set.present?
          .row.text-dark
            = render partial: "public/posts/show_training", collection: show_post.training_set.training_details, as: :detail
      .row.mb-2
        - unless admin_signed_in?
          .btn.col-3.offset-1.text-center{id:"comment__wrap-#{show_post.id}", "data-toggle": "modal", "data-target": ".commentWrap#{show_post.id}"}
            = render "public/comments/count", post: show_post
          .col-3.text-center{id: "favorite__wrap-#{show_post.id}"}
            = render "public/favorites/btn", post: show_post
          - if show_post.user != current_user
            .btn.col-4{"data-toggle": "modal", "data-target": ".reportWrap#{show_post.id}"}
              %span.fa-solid.fa-triangle-exclamation.col-3
              = t("report")
        - if destroy_authenticate?(show_post)
          = link_to destroy_move(show_post), method: :delete, class: "btn col-4 text-center" do
            %span.fa-solid.fa-trash
    - unless current_page?(posts_path) || current_page?(searches_path)
      .row.offset-1
        .col-12
          = render "public/comments/form", post: show_post, comment: comment
      .row
        .col-12
          .container-fluid{id: "comment__wrap-content-#{show_post.id}"}
            = render partial: "public/comments/show_comment", collection: show_post.comments, as: :comment
- unless admin_signed_in?
  - if current_page?(posts_path)
    = render "public/comments/modal", post: show_post, comment: comment
  = render "public/reports/modal", post: show_post, report: Report.new